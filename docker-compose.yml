networks:
  expert-network:
    driver: bridge
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      elasticsearch:
        condition: service_started
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
    - DATABASE_URL=postgresql://user:password@postgres:5432/expertfinder
    - REDIS_URL=redis://redis:6379
    - ELASTICSEARCH_URL=http://elasticsearch:9200
    - OPENAI_API_KEY=${OPENAI_API_KEY}
    - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    - GOOGLE_CSE_ID=${GOOGLE_CSE_ID}
    - BING_API_KEY=${BING_API_KEY}
    - SERP_API_KEY=${SERP_API_KEY}
    - STRIPE_API_KEY=${STRIPE_API_KEY}
    - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
    - CHROMA_DB_PATH=/app/data/chromadb
    - ANONYMIZED_TELEMETRY=false
    networks:
    - expert-network
    ports:
    - 8000:8000
    volumes:
    - ./data:/app/data
    - ./backend/models:/app/models
  elasticsearch:
    environment:
    - discovery.type=single-node
    - xpack.security.enabled=false
    - ES_JAVA_OPTS=-Xms512m -Xmx512m
    image: elasticsearch:8.11.0
    networks:
    - expert-network
    ports:
    - 9200:9200
    volumes:
    - elasticsearch_data:/usr/share/elasticsearch/data
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
    - backend
    environment:
    - REACT_APP_API_URL=http://localhost:8000
    networks:
    - expert-network
    ports:
    - 3000:80
  postgres:
    environment:
      POSTGRES_DB: expertfinder
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
    healthcheck:
      interval: 5s
      retries: 5
      test:
      - CMD-SHELL
      - pg_isready -U user -d expertfinder
      timeout: 5s
    image: postgres:15
    networks:
    - expert-network
    ports:
    - 5432:5432
    volumes:
    - postgres_data:/var/lib/postgresql/data
  redis:
    image: redis:7-alpine
    networks:
    - expert-network
    ports:
    - 6379:6379
    volumes:
    - redis_data:/data
volumes:
  chroma_data: null
  elasticsearch_data: null
  postgres_data: null
  redis_data: null
